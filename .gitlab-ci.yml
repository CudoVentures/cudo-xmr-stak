stages:
  - build
  - publish

pack-win:
  stage: build
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: 'C:\Users\Builder\build-credentials.json'
    CMAKE_PREFIX_PATH: C:\xmr-stak-dep\hwloc;C:\xmr-stak-dep\libmicrohttpd;C:\xmr-stak-dep\openssl
  cache:
    key: win
    paths:
      - node_modules
  tags:
    - shell
    - build
    - win
  script:
    - mkdir build-win
    - cd build-win
    - cmake -G "Visual Studio 15 2017 Win64" -T v141,host=x64 ..
    - cmake --build . --config Release --target install
    - cd bin/Release
    - copy C:\xmr-stak-dep\openssl\bin\* .
  artifacts:
    paths:
      - build-win/bin/Release

pack-linux:
  stage: build
  image: nvidia/cuda:9.2-devel-ubuntu18.04
  cache:
    key: linux
    paths:
      - node_modules
  tags:
    - docker
    - build
    - linux
  before_script:
    - apt update
    - apt install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git ocl-icd-opencl-dev wget
    - wget https://storage.googleapis.com/cudo-download/tools/AMD-APP-SDK-v3.0.130.136-GA-linux64.sh
    - chmod +x AMD-APP-SDK-v3.0.130.136-GA-linux64.sh
    - ./AMD-APP-SDK-v3.0.130.136-GA-linux64.sh
  script:
    - mkdir build-linux
    - cd build-linux
    - cmake ..
    - make install
  artifacts:
    paths:
      - build-linux/bin/Release

pack-mac:
  stage: build
  cache:
    key: mac
    paths:
      - node_modules
  tags:
    - shell
    - build
    - mac
  script:
    - mkdir build-mac
    - cd build-mac
    - cmake .. -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=ON
    - make install
  artifacts:
    paths:
      - build-mac/bin/Release

upload-prebuilds:
  stage: publish
  image:
    name: gcr.io/cloud-builders/gsutil
    entrypoint:
      - ''
  only:
    refs:
      - tags
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: /build-credentials.json
  dependencies:
    - pack-win
    - pack-mac
    - pack-linux
  tags:
    - docker
    - build
    - linux
  script:
    - VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
    - tar -czvf win-$VERSION.tar.gz build-win/bin/*.dll build-win/bin/xmr-stak.exe
    - tar -czvf linux-$VERSION.tar.gz build-linux/bin/xmr-stak
    - tar -czvf mac-$VERSION.tar.gz build-mac/bin/xmr-stak
    - ls -l
